name: Test and Deploy

on: 
  push:
    branches:
      - main
      - 'release/**'

# Assumes a pm2 process is running already, with the name matrika-api
# If not, you can start it manually one time - pm2 start npm --name "matrika-api" ./backend/bin/www
# It is easier than to handle this in the workflow for now.

jobs:

  test_backend:
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo:latest
        ports:
          - 27018:27017
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        working-directory: ./backend
        run: npm ci
      - name: Download wait-for-it.sh
        run: |
            wget https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh 
            chmod +x wait-for-it.sh
      - name: Wait for MongoDB
        run: ./wait-for-it.sh localhost:27018 --timeout=60 --strict -- echo "MongoDB is up"
      - name: Wait for PostgreSQL
        run: ./wait-for-it.sh localhost:5432 --timeout=60 --strict -- echo "PostgreSQL is up"
      - name: Run tests
        working-directory: ./backend
        env:
          MONGO_URL: mongodb://localhost:27018/testdb
          DB_URL: postgres://postgres:postgres@localhost:5432/testdb
        run: npm test
  deploy:
    needs: test_backend
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/release/')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        working-directory: ./backend
        run: npm ci
      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1
        with:
          path: ./backend
      - name: Add environment information to frontend
        working-directory: ./frontend
        run: |
          echo "VITE_API_URL=${{ secrets.VITE_BASE_URL }}" >.env
          echo "VITE_APP_VERSION=${{ steps.package-version.outputs.current-version }} (on ${{ github.ref_name }})"  >>.env
          echo "VITE_BUILD_TIME=$(date)"  >>.env
      - name: Add environment information to backend
        working-directory: ./backend
        run: echo "${{ secrets.BACKEND_ENV }}" >.env
      - name: Build frontend
        working-directory: ./frontend
        run: |
          npm install
          npm run build --production
      - name: Transfer to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          password: ${{ secrets.VPS_PASSWORD }}
          port: ${{ secrets.VPS_SSH_PORT }}
          source: "frontend/dist, api/*"
          target: "/home/mbs/matrika/"
      - name: Restart server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          password: ${{ secrets.VPS_PASSWORD }}
          port: ${{ secrets.VPS_SSH_PORT }}
          script: |
            cd /home/mbs/matrika
            mv frontend/dist frontend1
            rm -rf frontend
            mv frontend1 frontend
            cd /home/mbs/rr/api
            npm install --production
            pm2 restart matrika-api
