


paths:
  /auth/login:
    post:
      summary: User login
      operationId: loginUser
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoginData'
          application/json:
            schema:
              $ref: '#/components/schemas/LoginData'
      responses:
        '200':
          description: Successful login
          headers:
            Set-Cookie:
              description: Session cookie, hadles authentication, the browser will use it automatically
              schema: 
                type: string
                example: connect.sid=s%abc%xyz; Path=/; HttpOnly; SameSite=Strict
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  user:
                    $ref: '#/components/schemas/User'
        '401':
          description: Authentication failed

  /auth/logout:
    post:
      summary: User logout
      operationId: logoutUser
      tags:
        - Authentication
      responses:
        200:
          description: Successful logout
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean

  /auth/change-password:
    post:
      summary: Change user password
      tags:
        - User
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangePasswordData'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordData'
             
      responses:
        '200':
          description: Password changed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        '400':
          description: Validation error
        '401':
          description: Unauthorized

  /auth/register:
    post:
      summary: Register a new user
      operationId: registerUser
      tags:
        - User
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RegisterData'
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterData'
      responses:
        '200':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  user:
                    $ref: '#/components/schemas/User'
        '400':
          description: Validation error
        '409':
          description: Conflict error

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        firstName:
          type: string
        lastName:
          type: string
    RegisterData:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 6
        firstName:
          type: string
          minLength: 2
        lastName:
          type: string
          minLength: 2
    LoginData:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    ChangePasswordData:
      type: object
      properties:
        oldPassword:
          type: string
        password:
          description: New password
          type: string
          minLength: 6
    